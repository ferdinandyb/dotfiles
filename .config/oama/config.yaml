## oama version 0.16

## This is a YAML configuration file, indentation matters.
## Double ## indicates comments while single # default values.
## Not all defaults are shown, for full list run `oama printenv`
## and look at the `services:` section.

## Possible options for keeping refresh and access tokens:
## GPG - in a gpg encrypted file $XDG_STATE_HOME/oama/<email-address>.oauth
##       (XDG_STATE_HOME defaults to ~/.local/state)
## GPG - in a gpg encrypted file ~/.local/state/oama/<email-address>.oauth
## KEYRING - in the keyring of a password manager with Secret Service API
##
## Choose exactly one.

# encryption:
#     tag: KEYRING

encryption:
  tag: GPG
  contents: 79768ABA7C3D9B56

## Builtin service providers
## - google
## - microsoft
## Required fields: client_id, client_secret
##
services:
  google:
    auth_scope: https://mail.google.com/
    client_id: 406964657835-aq8lmia8j95dhl1a2bvharmfk3t1hgqj.apps.googleusercontent.com
    client_secret: kSmqreRr0qwBWJgbf5Y-PjSU

  microsoft:
    # auth_scope: https://outlook.office365.com/IMAP.AccessAsUser.All https://outlook.office365.com/SMTP.Send offline_access
    client_id: 9e5f94bc-e8a4-4e73-b8be-63364c29d753
    # client_secret: 'TxRBilcHdC6WGBee]fs?QR:SJ8nI[g82'
    tenant: common

  ## User configured providers
  ## Required fields: client_id, client_secret, auth_endpoint, auth_scope, token_endpoint
  ##
  ## For example:
  # yahoo:
  #   client_id: application-CLIENT-ID
  #   client_secret: application-CLIENT_SECRET
  #   auth_endpoint: EDIT-ME!
  #   auth_scope: EDIT-ME!
  #   token_endpoint: EDIT-ME!
