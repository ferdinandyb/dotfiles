# set ctrl space as command
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

if-shell "test -f ~/.tmux/tmuxline_theme.sh" "source ~/.tmux/tmuxline_theme.sh"
# some stuff
set -g default-terminal "tmux-256color"
# set -g default-terminal 'screen-256color'
set -g history-limit 100000
set-option -g set-titles on
set-option -g set-titles-string "tmux:#S #W #T"

# set-option -g default-shell /bin/bash
set -g extended-keys on
set-option -g default-shell /bin/zsh
set-option -g detach-on-destroy off



setw -g aggressive-resize on
# enable clicking
set -g mouse on

# split panes using | and -
bind c new-window -c "#{pane_current_path}"
bind ü split-window -h -c "#{pane_current_path}"
bind ö split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind Escape copy-mode
bind p paste-buffer
bind ő copy-mode # map [ to the place it would be on English keyboards
bind -T copy-mode-vi v send -X begin-selection
bind ú paste-buffer ## map ] to the place it would be on English keyboards

setw -g mode-keys vi


###########################
# Plugins
###########################
# To install plugins:
#   1) Add plugin down here
#   2) Prefix + I to install plugin
# To update plugins:
#   1) Prefix + U
# To remove plugins:
#   1) Remove line down here
#   2) Prefix + ALT + U

# set -g @resurrect-processes '\
#             ssh \
#             ranger \
#             "yarn serve" \
#             nodemon '

set -g @plugin 'tmux-plugins/tpm'


set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '1'
set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'



set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'

set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'alberti42/tmux-fzf-links'
set-option -g @fzf-links-fzf-display-options "-w 120% --maxnum-displayed 20 --multi --track"

if-shell 'OSTYPE=$(uname -s) && case $OSTYPE in "Linux") true; ;; *) false; ;; esac' {
  # Linux
  set-option -g @fzf-links-browser-open-cmd "xdg-open '%url'"
}{
  if-shell 'OSTYPE=$(uname -s) && case $OSTYPE in "Darwin") true; ;; *) false; ;; esac' {
    # Darwin
    set-option -g @fzf-links-browser-open-cmd "open '%url'"
  }
}

set -g @plugin 'tmux-plugins/tmux-open'
set -s escape-time 0

set -g @plugin 'sainnhe/tmux-fzf'
set -g @resurrect-restore 'R'
set -g @resurrect-save 'S'

# tmux resurrect looses ENV-s, so ln -s ~/.local/bin/fzf ~/.fzf/bin needs to be done
bind "C-s" run-shell "$HOME/.tmux/plugins/tmux-fzf/scripts/session.sh switch"
bind "C-w" run-shell "$HOME/.tmux/plugins/tmux-fzf/scripts/pane.sh switch"
bind "c-n" command-prompt -I "new -s "



set -g focus-events on

# replace ~/.local/bin/fzf-panes.tmux to your path of fzf-panes.tmux
if-shell '[ -f ~/.tmux/scripts/fzf-panes.tmux ]' {
#   if you want to exclude specified session, please set @fzf_panes_ex_session_pat
#   for example, value equal to '^(floating)$', will exclude panes in session named 'floating'
#    set -g '@fzf_panes_ex_session_pat' '^(floating)$'
    set-hook -g pane-focus-in[10] \
    "run -b 'bash ~/.tmux/scripts/fzf-panes.tmux update_mru_pane_ids'"
    bind "C-p" run -b 'bash ~/.tmux/scripts/fzf-panes.tmux new_window'
    bind "," run -b 'bash ~/.tmux/scripts/fzf-panes.tmux select_last_pane'
} {
    set-hook -ug pane-focus-in[10]
    bind w choose-tree -Z
}
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-é' if-shell "$is_vim" 'send-keys C-é'  'select-pane -l'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-é' select-pane -l
