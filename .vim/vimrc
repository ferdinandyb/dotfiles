set nocompatible
set exrc
if empty(glob('~/.vim/autoload/plug.vim'))
      silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
             \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

if !exists("g:os")
    if has("win64") || has("win32") || has("win16")
        let g:os = "Windows"
    else
        let g:os = split(system('uname -a'))[-1]
    endif
endif
" leaders need to be set early because it is not dynamical
let mapleader="\<Space>"
let maplocalleader="\<Space>"
" this is needed so kitty's protocol doesn't turn the menu key into a large undo
set <F20>=57363u

call plug#begin('~/.vim/plugged')
" should be coloring changes by char, but messes up colorscheme
" it is also in conflict with unimpaired so needs to be before
" Plug 'rickhowe/diffchar.vim'
source ~/.vim/configs/floaterm.vim
Plug 'ferdinandyb/diffchar.vim'
source ~/.vim/configs/theme-setup.vim
" install language packs, but disable any you hand tweak
source ~/.vim/configs/vim-polyglot.vim
" extended %
Plug 'andymass/vim-matchup'
" add new targets to vim eg c2i)
Plug 'wellle/targets.vim'
" adds xml/html text objects
Plug 'kana/vim-textobj-user' | Plug 'whatyouhide/vim-textobj-xmlattr'
" tmux config syntax highlight
Plug 'whatyouhide/vim-tmux-syntax'
" syntax for kitty
Plug 'fladson/vim-kitty'
source ~/.vim/configs/i3wm-kitty-vim-tmux-navigator.vim
" command to align text (never used it yet, learn or remove)
source ~/.vim/configs/vim-easy-align.vim
" make path also when writing a new file with
Plug 'jessarcher/vim-heritage'
" open files at the last edit with some smart settings
Plug 'farmergreg/vim-lastplace'
" better surrounds than tpope's
Plug 'machakann/vim-sandwich'
" swap delimited items
source ~/.vim/configs/vim-swap.vim
" register viewing
Plug 'junegunn/vim-peekaboo'
source ~/.vim/configs/git.vim

" substitution for singular and plurals + changing the from snake_case to
" camelCase
Plug 'tpope/vim-abolish'

" auto expandtab setting
Plug 'tpope/vim-sleuth'


" n_ctrl-x/a work as expected for dates, roman numerals etc.
Plug 'tpope/vim-speeddating'
" makes speeddating repeatable
Plug 'tpope/vim-repeat'
source ~/.vim/configs/vim-obsession.vim
" simple comment facilities
Plug 'tpope/vim-commentary'
" file browser
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'Xuyuanp/nerdtree-git-plugin', { 'on': 'NERDTreeToggle' }
Plug 'tpope/vim-vinegar'
source ~/.vim/configs/vim-auto-save.vim

Plug 'honza/vim-snippets'

source ~/.vim/configs/fzf.vim

" generate tags for jumping between latex tags and others
" requires https://askubuntu.com/questions/796408/installing-and-using-universal-ctags-instead-of-exuberant-ctags
Plug 'ludovicchabant/vim-gutentags'
Plug 'preservim/tagbar'
" clears searches smarter
Plug 'junegunn/vim-slash'
" visualize undo trees
Plug 'sjl/gundo.vim'
" doesn't open misspelled files
" Plug 'einfachtoll/didyoumean'
" did you mean will use fzf
let g:dym_use_fzf = 1
" dispatch commands in the background
Plug 'tpope/vim-dispatch'
" run tests with e.g. Dispatch
" vim unimpaired might not be really needed ...
Plug 'vim-test/vim-test'
Plug 'tpope/vim-unimpaired'
" wrap unix commands
Plug 'tpope/vim-eunuch'
" asynchronous linting
source ~/.vim/configs/coc-and-ale.vim
" switch between multiple lines and single lines
Plug 'AndrewRadev/splitjoin.vim'

source ~/.vim/configs/movements.vim
Plug 'nanotee/zoxide.vim'
" auto switch to root dir
Plug 'airblade/vim-rooter'
"
" the below plugins are support for languages
"
" Emmet is for expanding html stuff
Plug 'mattn/emmet-vim'
" emmet might be absolutely useless and just use snippets?
let g:user_emmet_install_global = 0
autocmd FileType html,css,vue EmmetInstall

source ~/.vim/configs/writing.vim
source ~/.vim/configs/goyo.vim
Plug 'hauleth/vim-backscratch'

Plug 'pangloss/vim-javascript'
Plug 'othree/html5.vim'
Plug 'elzr/vim-json'
Plug 'jupyter-vim/jupyter-vim'
Plug 'goerz/jupytext.vim'
" PYTHON
" python code folding
Plug 'tmhedberg/SimpylFold'
" python textobjects: isn't this covered by the LSP?
Plug 'jeetsukumaran/vim-pythonsense'
Plug 'Konfekt/FastFold'
Plug 'vim-scripts/LargeFile'
Plug 'puremourning/vimspector'
" Plug 'mhinz/vim-startify'
" let g:startify_custom_header = ''


" database fun
Plug 'tpope/vim-dadbod'
Plug 'kristijanhusak/vim-dadbod-ui'
Plug 'kristijanhusak/vim-dadbod-completion'
if has('nvim')
    Plug 'glacambre/firenvim', { 'do': { _ -> firenvim#install(0) } }
endif
call plug#end()

doautocmd User PlugLoaded
source ~/.vim/configs/settings.vim


" better escape and exiting when using arrows
inoremap jj <Esc>

" format paragraph
nnoremap <leader>q gqap


" Automatically save and load folds: this is probably irritating
" autocmd BufWinLeave *.* mkview
" autocmd BufWinEnter *.* silent loadview

" ros setup
autocmd BufRead,BufNewFile *.launch setfiletype roslaunch

" Rmarkdown
autocmd BufRead,BufNewFile *.Rmd setfiletype markdown
autocmd BufRead,BufNewFile *.Rmd nnoremap <Leader>r :Dispatch R -e "rmarkdown::render('%',output_file='%.html')" <CR>



" this disable the jupyter-vim bindings
let g:jupyter_mapkeys = 0


let g:gundo_prefer_python3 = 1

" clear search highlight TODO: might not need it anymore
nnoremap <silent> <leader>m :noh <bar> call popup_clear()<cr>


nmap <leader>vr :source ~/.vim/vimrc<cr>

" Allow gf to open non-existent files
map gf :edit <cfile><cr>

" Reselect visual selection after indenting
vnoremap < <gv
vnoremap > >gv


"wrap
nnoremap <leader>w :set wrap!<cr>

" this also has a sideeffect of Q NOT taking you to ex mode
nnoremap Q :qa<CR>

" jk will work visually except when taking a count
nnoremap <expr> k (v:count == 0 ? 'gk' : 'k')
nnoremap <expr> j (v:count == 0 ? 'gj' : 'j')
inoremap <silent> <Up> <ESC><Up>
inoremap <silent> <Down> <ESC><Down>
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
cnoremap <C-h> <Left>
cnoremap <C-j> <Down>
cnoremap <C-k> <Up>
cnoremap <C-l> <Right>

" imap <C-i> <Esc>saiW_Wi
" imap <C-b> <Esc>saiW*.Whi
" most editors will have these for bold and italic
imap <C-e> <Esc>saiW_Wa
imap <C-b> <Esc>saiW*.Wa

nnoremap <F2> :CocToggle<CR>
nnoremap <F3> :ALEToggle<CR>
nnoremap <F4> :AutoSaveToggle<CR>
nnoremap <F5> :setlocal spell! spelllang=en_gb,hu<CR>
nnoremap <F6> :GundoToggle<CR>
nnoremap <F7> :NERDTreeToggle<CR>
nnoremap <F8> :TagbarToggle<CR>

" spelling
nnoremap z√≥ 1z=

" Ctrl-c copies to system keyboard in visual
vmap <C-C> "+y
nnoremap Y yg_


" Ctrl-p pastes the last yank: vim unimpaired may have better maps
nnoremap <leader>p "0p
nnoremap <leader>P "0P
" nnoremap <leader>v "+p
nnoremap <leader>d "_dd
nnoremap <leader>o o<ESC>"+P
" nnoremap <leader>gp "0gp
" nnoremap <leader>gv "+gp
" Maintain the cursor position when yanking a visual selection
" http://ddrscott.github.io/blog/2016/yank-without-jank/
vnoremap <expr>y "my\"" . v:register . "y`y"
vnoremap <expr>Y "mY\"" . v:register . "Y`Y"
